[gd_resource type="ShaderMaterial" load_steps=2 format=3 uid="uid://bjrvjejnu3evj"]

[sub_resource type="Shader" id="Shader_kbjj0"]
code = "shader_type spatial;

uniform vec3 color = vec3(1.0);
uniform float glow_strength = 3.5;

void vertex() {
    // Called for every vertex the material is visible on.
}

void fragment() {
    ALBEDO = color;
    EMISSION = color * glow_strength;
}

//void light() {
//	// Called for every pixel for every light affecting the material.
//	// Uncomment to replace the default light processing function with this one.
//}
"

[resource]
render_priority = 0
shader = SubResource("Shader_kbjj0")
shader_parameter/color = Vector3(1, 1, 1)
shader_parameter/glow_strength = 1.0
